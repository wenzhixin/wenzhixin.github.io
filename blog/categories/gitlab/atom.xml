<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gitlab | 文志新的博客]]></title>
  <link href="http://wenzhixin.github.io/blog/categories/gitlab/atom.xml" rel="self"/>
  <link href="http://wenzhixin.github.io/"/>
  <updated>2016-08-03T02:44:27+00:00</updated>
  <id>http://wenzhixin.github.io/</id>
  <author>
    <name><![CDATA[文志新]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[安装 GitLab 到 Ubuntu14.04，配置和迁移]]></title>
    <link href="http://wenzhixin.github.io/blog/2016/07/26/gitlab_ubuntu1404/"/>
    <updated>2016-07-26T10:21:35+00:00</updated>
    <id>http://wenzhixin.github.io/blog/2016/07/26/gitlab_ubuntu1404</id>
    <content type="html"><![CDATA[<p>现在 gitlab 最新的版本是可以直接通过 <code>apt-get</code> 进行安装升级的。以前公司安装的版本都是通过命令行的方式进行安装，很麻烦也容易出错。现在尝试从 Ubuntu12.04 非集成版迁移到 Ubuntu14.04 apt 版本。花了不少时间，这里记录下最简单的步骤。</p>

<p>我们迁移的关键点为：</p>

<ul>
<li>系统迁移，从 Ubuntu12.04 到 Ubuntu14.04</li>
<li>数据库迁移，从 MySQL 到 PostgreSQL</li>
<li>软件版本迁移，从非集成版到集成版（deb包）</li>
</ul>


<h3>安装 gitlab</h3>

<p>在新的服务器上通过 <code>apt-get</code> 安装与原服务器相同版本的安装包（7.13.5，不然会导致导入数据出错）。</p>

<ol>
<li>安装需要的依赖包</li>
</ol>


<pre><code>sudo apt-get update
sudo apt-get dist-upgrade
sudo apt-get install curl openssh-server ca-certificates postfix
</code></pre>

<ol>
<li>信任 GitLab 的 GPG 公钥</li>
</ol>


<pre><code>curl https://packages.gitlab.com/gpg.key 2&gt; /dev/null | sudo apt-key add - &amp;&gt;/dev/null
</code></pre>

<ol>
<li>添加源并安装</li>
</ol>


<pre><code>sudo vi /etc/apt/sources.list.d/gitlab-ce.list

deb https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu trusty main

# sudo apt-get install apt-transport-https
sudo apt-get update
sudo apt-get install gitlab-ce=7.13.5-ce.0
</code></pre>

<p><em>注：由于官网存在墙的问题，我们使用了清华大学的源进行安装。</em></p>

<ol>
<li>配置并启动</li>
</ol>


<pre><code>sudo gitlab-ctl reconfigure
</code></pre>

<p><em>注：这个版本由于 <a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/2444">bug</a> 导致一直配置不成功，需要删除 mattermost 的内容才行。</em></p>

<ol>
<li>访问并使用</li>
</ol>


<p>首次打开需要初始化管理员（root）的密码，初始化完成之后跳转到登录接口，可登录使用。
到这里我们已经在新的服务器上安装了全新的 gitlab-ce。</p>

<h3>导出数据</h3>

<p>在原来的机器上，我们需要将版本库数据以及数据库数据导出为文件，以便在新系统中使用。</p>

<ol>
<li>导出版本库数据</li>
</ol>


<pre><code># 切换为 root 用户，不然会有权限问题
sudo -i

# 停止 gitlab

service gitlab stop

# 进入 gitlab 工程目录
cd /home/git/gitlab/

# 备份版本库数据
bundle exec rake gitlab:backup:create RAILS_ENV=production
</code></pre>

<p>看到如下信息：
<code>
Creating backup archive: 1461142074_gitlab_backup.tar ... done
</code>
就表示备份完成了，该文件存在于 <code>/home/git/gitlab/tmp/backups</code> 文件夹下。</p>

<ol>
<li>导出数据库文件</li>
</ol>


<p>退出 root 用户，通过命令行对 MySQL 进行备份
<code>
mysqldump --compatible=postgresql --default-character-set=utf8 -r current_install.mysql -u root gitlabhq_production -p
</code></p>

<p>导出完成后，将 1461142074_gitlab_backup.tar 和 current_install.mysql 拷贝（scp）到新的服务器上备用。</p>

<h3>迁移</h3>

<p>由于之前用的是 MySQL，因为 MySQL 有一些问题，官方建议使用 PostgreSQL 来代替 MySQL。迁移的原理是先将 MySQL 导出为 sql 文件，然后使用工具将其转换为 PostgreSQL 的文件并导入到 PostgreSQL 中。</p>

<ol>
<li>安装所需的库</li>
</ol>


<pre><code>sudo apt-get install ed software-properties-common

sudo apt-add-repository ppa:brightbox/ruby-ng
sudo apt-get update
sudo apt-get install ruby2.2

# gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/
sudo gem install bundle
</code></pre>

<ol>
<li>开始迁移</li>
</ol>


<p>解压我们的压缩包，我们将其解压到一个空的目录 <code>tar_me_from_inside</code> 下，并删除原来的 tar 文件
<code>
mkdir ~/tar_me_from_inside &amp;&amp; cd ~/tar_me_from_inside  
tar -xvf ~/1461142074_gitlab_backup.tar  
rm ~/1461142074_gitlab_backup.tar
</code></p>

<p>官网上提供了工具可以将 MySQL 转换为 PostgreSQL
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/&lt;br/&gt;
</span><span class='line'>git clone -b gitlab &lt;a href="https://github.com/gitlabhq/mysql-postgresql-converter.git"&gt;https://github.com/gitlabhq/mysql-postgresql-converter.git&lt;/a&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;cd ~/mysql-postgresql-converter&lt;br/&gt;
</span><span class='line'>python db_converter.py ~/current_install.mysql ~/database.psql
</span><span class='line'>ed -s ~/database.psql &lt; move_drop_indexes.ed</span></code></pre></td></tr></table></div></figure></p>

<p>替换原来的 db 文件
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/tar_me_from_inside/db&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rm database.sql.gz
</span><span class='line'>mv ~/database.psql database.sql
</span><span class='line'>gzip database.sql</span></code></pre></td></tr></table></div></figure></p>

<p>现在，我们将其压缩为原来的文件名
<code>
cd ~/tar_me_from_inside
tar -zcvf ~/1461142074_gitlab_backup.tar .
cd ~/
</code></p>

<p>接着，我们将生成的 tar 文件拷贝到 <code>/var/opt/gitlab/backups</code> 下
<code>
sudo mv 1461142074_gitlab_backup.tar /var/opt/gitlab/backups
</code></p>

<p>停用 <code>unicorn</code> 和 <code>sidekiq</code> 并进行恢复</p>

<pre><code>sudo gitlab-ctl stop unicorn  
sudo gitlab-ctl stop sidekiq  
sudo gitlab-rake gitlab:backup:restore BACKUP=1461142074

sudo gitlab-ctl start unicorn  
sudo gitlab-ctl start sidekiq  
</code></pre>

<p>最后，配置<code>/etc/gitlab/gitlab.rb</code>文件，将 url 改成服务器所在的 IP 或域名，并将 gitlab 升级到最新版本
<code>
sudo apt-get update
sudo apt-get upgrade
</code></p>

<p>大功告成！</p>

<hr />

<p>从 7.13.5 升级到 8.6.6 会有一系列的问题。这里记录下：</p>

<p><code>apt-get update</code> 遇到的问题
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Recipe: gitlab::database_migrations
</span><span class='line'>  * bash[migrate gitlab-rails database] action runrake aborted!
</span><span class='line'>StandardError: An error has occurred, this and all later migrations canceled:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;PG::DuplicateTable: ERROR:  relation &ldquo;project_group_links&rdquo; already exists</span></code></pre></td></tr></table></div></figure></p>

<p><a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/14305">解决</a>:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gitlab-rails dbconsole
</span><span class='line'>psql (9.2.15, server 9.3.10)
</span><span class='line'>WARNING: psql version 9.2, server version 9.3.
</span><span class='line'>         Some psql features might not work.
</span><span class='line'>Type &ldquo;help&rdquo; for help.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;gitlabhq_production=# INSERT INTO schema_migrations (version) values (&lsquo;20130711063759&rsquo;);
</span><span class='line'>INSERT 0 1
</span><span class='line'>gitlabhq_production-# INSERT INTO schema_migrations (version) values (&lsquo;20130820102832&rsquo;);
</span><span class='line'>INSERT 0 1
</span><span class='line'>gitlabhq_production=#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;exit
</span><span class='line'>sudo gitlab-ctl reconfigure
</span><span class='line'>sudo gitlab-rake db:migrate RAILS_ENV=production</span></code></pre></td></tr></table></div></figure></p>

<hr />

<p><code>migrate</code> 的过程出现的问题（类似的问题需要删除数据库）：
<code>
PG::DuplicateTable: ERROR:  relation "sent_notifications" already exists
</code></p>

<p><a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/3494">解决</a>：
<code>
sudo gitlab-rails db
drop table sent_notifications;
drop table lfs_objects;
drop table lfs_objects_projects;
drop table releases;
drop table spam_logs;
drop table todos;
sudo gitlab-rake db:migrate RAILS_ENV=production
</code></p>

<hr />

<p>配置邮件网关发送邮件的问题</p>

<p><a href="https://gitlab.com/gitlab-org/omnibus-gitlab/issues/155">解决</a></p>

<ul>
<li>configuration gitlab.yml
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /var/opt/gitlab/gitlab-rails/etc/gitlab.yml&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;email_from: &lt;a href="&#109;&#x61;&#105;&#108;&#x74;&#x6f;&#x3a;&#103;&#105;&#x74;&#64;&#120;&#x78;&#120;&#x78;&#x2e;&#x63;&#111;&#109;"&gt;&#103;&#105;&#116;&#64;&#120;&#120;&#x78;&#x78;&#x2e;&#99;&#111;&#109;&lt;/a&gt;</span></code></pre></td></tr></table></div></figure></p>

<ul>
<li>configuration production.rb
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /opt/gitlab/embedded/service/gitlab-rails/config/environments/production.rb&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;config.action_mailer.delivery_method = :sendmail&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;config.action_mailer.delivery_method = :smtp
</span><span class='line'>config.action_mailer.perform_deliveries = true
</span><span class='line'>config.action_mailer.raise_delivery_errors = true
</span><span class='line'>&lt;code&gt;
</span><span class='line'>* configure smtp
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>vi /opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if Rails.env.production? Gitlab::Application.config.action_mailer.delivery_method = :smtp
</span><span class='line'>ActionMailer::Base.smtp_settings =
</span><span class='line'>  {
</span><span class='line'>    address: &ldquo;mail.xxx.com&rdquo;,
</span><span class='line'>    port: 25,
</span><span class='line'>    user_name: &ldquo;&lt;a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#x67;&#x69;&#116;&#64;&#x78;&#120;&#120;&#46;&#x63;&#x6f;&#109;"&gt;&#x67;&#x69;&#x74;&#x40;&#120;&#x78;&#x78;&#x2e;&#99;&#111;&#x6d;&lt;/a&gt;&rdquo;,
</span><span class='line'>    password: &ldquo;password&rdquo;,
</span><span class='line'>    domain: &ldquo;xxx.com&rdquo;,
</span><span class='line'>    authentication: :login,
</span><span class='line'>    enable_starttls_auto: true
</span><span class='line'>  }
</span><span class='line'>&lt;code&gt;
</span><span class='line'>* test gitlab email notification via change the user email address, from the below log, it seems the email has been sent by gitlab.
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>tail -f /var/log/gitlab/gitlab-rails/production.log Sent mail to &lt;a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#x6f;&#58;&#x67;&#105;&#116;&#64;&#120;&#120;&#120;&#46;&#99;&#111;&#x6d;"&gt;&#x67;&#x69;&#116;&#64;&#120;&#120;&#120;&#x2e;&#x63;&#x6f;&#x6d;&lt;/a&gt; (3053.2ms)</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
