<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vue | 文志新的博客]]></title>
  <link href="http://wenzhixin.github.io/blog/categories/vue/atom.xml" rel="self"/>
  <link href="http://wenzhixin.github.io/"/>
  <updated>2016-08-03T02:44:27+00:00</updated>
  <id>http://wenzhixin.github.io/</id>
  <author>
    <name><![CDATA[文志新]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[开发 Vue-bootstrap-table 组件之单文件组件]]></title>
    <link href="http://wenzhixin.github.io/blog/2016/07/26/hello-vue-component/"/>
    <updated>2016-07-26T09:58:44+00:00</updated>
    <id>http://wenzhixin.github.io/blog/2016/07/26/hello-vue-component</id>
    <content type="html"><![CDATA[<p>根据文档<a href="http://vuejs.org.cn/guide/application.html#%E5%8D%95%E6%96%87%E4%BB%B6%E7%BB%84%E4%BB%B6">单文件组件</a>一节，我们可以将组件集成为一个文件，将 html，css，JavaScript 代码都放到同个文件中，最终编译成我们想要的文件。vue 文件的基本模板为：</p>

<p>```
<template>
    <div>
        <h1></h1>
    </div>
</template></p>

<script>
module.export = {
    props: {
        message: {
            type: String,
            default: 'Hello Vue.js'
        }
    }
};
</script>




<pre><code>
其中 template 为 html 代码，script 为 JavaScript 代码，style 为 css 代码。

这里使用最简单的例子理解如何创建 vue 单文件组件，我们将该文件保存为 `Hello.vue`，并创建 `main.js` 文件：
</code></pre>

<p>Hello = require(&lsquo;./Hello.vue&rsquo;);
module.exports = Hello;
```</p>

<p>然后使用官方工具<a href="https://github.com/vuejs/vue-cli">vue-cli</a>，对我们的组件进行编译，提供了几个模板：</p>

<ul>
<li><p><a href="https://github.com/vuejs-templates/webpack">webpack</a> - A full-featured Webpack + vue-loader setup with hot reload, linting, testing &amp; css extraction.</p></li>
<li><p><a href="https://github.com/vuejs-templates/webpack-simple">webpack-simple</a> - A simple Webpack + vue-loader setup for quick prototyping.</p></li>
<li><p><a href="https://github.com/vuejs-templates/browserify">browserify</a> - A full-featured Browserify + vueify setup with hot-reload, linting &amp; unit testing.</p></li>
<li><p><a href="https://github.com/vuejs-templates/browserify-simple">browserify-simple</a> - A simple Browserify + vueify setup for quick prototyping.</p></li>
<li><p><a href="https://github.com/vuejs-templates/simple">simple</a> - The simplest possible Vue setup in a single HTML file</p></li>
</ul>


<p>在这里我使用的是 browserify-simple 的方式。根据文档进行安装即可：</p>

<pre><code>vue init bro"wserify-simple hello
</code></pre>

<p>然后将上面创建两个文件放到 hello/src 下，然后修改 package.json 中的
<code>
"build": "cross-env NODE_ENV=production browserify src/main.js &gt; dist/vue-hello.js"
</code></p>

<p>运行 <code>npm run build</code>，就可以在 dist 下得到我们想要的文件了。</p>
]]></content>
  </entry>
  
</feed>
