<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[文志新的博客]]></title>
  <link href="http://wenzhixin.github.io/atom.xml" rel="self"/>
  <link href="http://wenzhixin.github.io/"/>
  <updated>2016-07-26T02:05:10+00:00</updated>
  <id>http://wenzhixin.github.io/</id>
  <author>
    <name><![CDATA[文志新]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[开发 Vue-bootstrap-table 组件之单文件组件]]></title>
    <link href="http://wenzhixin.github.io/blog/2016/07/26/hello-vue-component/"/>
    <updated>2016-07-26T09:58:44+00:00</updated>
    <id>http://wenzhixin.github.io/blog/2016/07/26/hello-vue-component</id>
    <content type="html"><![CDATA[<p>根据文档<a href="http://vuejs.org.cn/guide/application.html#%E5%8D%95%E6%96%87%E4%BB%B6%E7%BB%84%E4%BB%B6">单文件组件</a>一节，我们可以将组件集成为一个文件，将 html，css，JavaScript 代码都放到同个文件中，最终编译成我们想要的文件。vue 文件的基本模板为：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;template&gt;
</span><span class='line'>    &lt;div&gt;
</span><span class='line'>        &lt;h1&gt;&lt;/h1&gt;
</span><span class='line'>    &lt;/div&gt;
</span><span class='line'>&lt;/template&gt;
</span><span class='line'>&lt;script&gt;
</span><span class='line'>module.export = {
</span><span class='line'>    props: {
</span><span class='line'>        message: {
</span><span class='line'>            type: String,
</span><span class='line'>            default: 'Hello Vue.js'
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>};
</span><span class='line'>&lt;/script&gt;
</span><span class='line'>&lt;style&gt;
</span><span class='line'>h1 {font-size: 24px;}
</span><span class='line'>&lt;/style&gt;</span></code></pre></td></tr></table></div></figure>


<p>其中 template 为 html 代码，script 为 JavaScript 代码，style 为 css 代码。</p>

<p>这里使用最简单的例子理解如何创建 vue 单文件组件，我们将该文件保存为 <code>Hello.vue</code>，并创建 <code>main.js</code> 文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Hello = require('./Hello.vue');
</span><span class='line'>module.exports = Hello;</span></code></pre></td></tr></table></div></figure>


<p>然后使用官方工具<a href="https://github.com/vuejs/vue-cli">vue-cli</a>，对我们的组件进行编译，提供了几个模板：</p>

<ul>
<li><p><a href="https://github.com/vuejs-templates/webpack">webpack</a> - A full-featured Webpack + vue-loader setup with hot reload, linting, testing &amp; css extraction.</p></li>
<li><p><a href="https://github.com/vuejs-templates/webpack-simple">webpack-simple</a> - A simple Webpack + vue-loader setup for quick prototyping.</p></li>
<li><p><a href="https://github.com/vuejs-templates/browserify">browserify</a> - A full-featured Browserify + vueify setup with hot-reload, linting &amp; unit testing.</p></li>
<li><p><a href="https://github.com/vuejs-templates/browserify-simple">browserify-simple</a> - A simple Browserify + vueify setup for quick prototyping.</p></li>
<li><p><a href="https://github.com/vuejs-templates/simple">simple</a> - The simplest possible Vue setup in a single HTML file</p></li>
</ul>


<p>在这里我使用的是 browserify-simple 的方式。根据文档进行安装即可：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vue init bro"wserify-simple hello</span></code></pre></td></tr></table></div></figure>


<p>然后将上面创建两个文件放到 hello/src 下，然后修改 package.json 中的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"build": "cross-env NODE_ENV=production browserify src/main.js &gt; dist/vue-hello.js"</span></code></pre></td></tr></table></div></figure>


<p>运行 <code>npm run build</code>，就可以在 dist 下得到我们想要的文件了。</p>
]]></content>
  </entry>
  
</feed>
